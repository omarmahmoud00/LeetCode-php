/**
 * Definition for a binary tree node.
 * class TreeNode {
 *     public $val = null;
 *     public $left = null;
 *     public $right = null;
 *     function __construct($val = 0, $left = null, $right = null) {
 *         $this->val = $val;
 *         $this->left = $left;
 *         $this->right = $right;
 *     }
 * }
 */
class Solution {

    /**
     * @param TreeNode $root
     * @return Boolean
     */
    function isValidBST($root) {

        return $this->check($root, null, null);
        
    }

    private function check($node, $lower, $upper) {
        if ($node === null) {
            return true;
        }

        $val = $node->val;

        if (($lower !== null && $val <= $lower) || ($upper !== null && $val >= $upper)) {
            return false;
        }

        if (!$this->check($node->right, $val, $upper)) {
            return false;
        }

        if (!$this->check($node->left, $lower, $val)) {
            return false;
        }

        return true;
    }

}
