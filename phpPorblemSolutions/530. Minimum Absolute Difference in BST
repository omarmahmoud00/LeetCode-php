/**
 * Definition for a binary tree node.
 * class TreeNode {
 *     public $val = null;
 *     public $left = null;
 *     public $right = null;
 *     function __construct($val = 0, $left = null, $right = null) {
 *         $this->val = $val;
 *         $this->left = $left;
 *         $this->right = $right;
 *     }
 * }
 */
class Solution {
    private $min= PHP_INT_MAX ;
    private $prev;
    /**
     * @param TreeNode $root
     * @return Integer
     */
    function getMinimumDifference($root) {
        $this->traverse($root);
        return $this->min;
        
    }

    private function traverse($root){
        if($root==null) return;

        $this->traverse($root->left);
        if($this->prev!=null){
            $this->min = min($this->min,abs($root->val - $this->prev->val));
        }

        $this->prev = $root;
        $this->traverse($root->right);
        

    }

}
