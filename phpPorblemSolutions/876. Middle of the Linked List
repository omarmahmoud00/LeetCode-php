/**
 * Definition for a singly-linked list.
 * class ListNode {
 *     public $val = 0;
 *     public $next = null;
 *     function __construct($val = 0, $next = null) {
 *         $this->val = $val;
 *         $this->next = $next;
 *     }
 * }
 */
class Solution {
    private $middel;
    private $count;
    /**
     * @param ListNode $head
     * @return ListNode
     */
    function middleNode($head) {
        $count = $this->countLinkedList($head);
        $this->middel =0;
        $this->middel = intdiv($count,2);
       
       return $this->middel($head);
             
        
    }

    private function middel($node){
        if($node==null) return;
        if($this->middel==0) return $node;
        $this->middel-=1;
     return   $this->middel($node->next);
    }

    private function countLinkedList($node){
        if($node==null) return ;

        return 1 + $this->countLinkedList($node->next);
    }
}
