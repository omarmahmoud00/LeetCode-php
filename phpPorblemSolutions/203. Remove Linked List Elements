/**
 * Definition for a singly-linked list.
 * class ListNode {
 *     public $val = 0;
 *     public $next = null;
 *     function __construct($val = 0, $next = null) {
 *         $this->val = $val;
 *         $this->next = $next;
 *     }
 * }
 */
class Solution {

    /**
     * @param ListNode $head
     * @param Integer $val
     * @return ListNode
     */
    function removeElements($head, $val) {
        if($head==null) return $head;
         $head = $this->remove($head,$val);
         if($head->val == $val) $head = $head->next;
        return $head; 
    }

    private function remove($head,$val){
        $temp = $head;
        $prev = $temp;

        while($temp!=null){
             if($temp->val == $val){
                $prev->next = $temp->next;
                if($temp->next->val!=$val){
                    $prev= $temp->next;
                    
                }

            }else{
            $prev= $temp;
            }
            $temp = $temp->next;

        }
           
         return $head;  

    }

}
