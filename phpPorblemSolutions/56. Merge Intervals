class Solution {

    /**
     * @param Integer[][] $intervals
     * @return Integer[][]
     */
    function merge($intervals) {
        $size = count($intervals);
        if ($size <= 1) return $intervals;

        usort($intervals, function ($a, $b) {
            return $a[0] - $b[0];
        });

        $merge = [];
        $k = 0;

        $merge[$k] = $intervals[0];

        for ($i = 1; $i < $size; $i++) {
            if ($merge[$k][1] >= $intervals[$i][0]) {
                $merge[$k][1] = max($merge[$k][1], $intervals[$i][1]);
            } else { 
                $k++;
                $merge[$k] = $intervals[$i];
            }
        }

        return $merge;
    }
}
